apply plugin: 'com.android.model.library'

model{
    android {
        compileSdkVersion = 19
        buildToolsVersion = "22.0.1"

        defaultConfig.with {
            minSdkVersion.apiLevel = 10
            targetSdkVersion.apiLevel = 19
            versionCode = 1
            versionName = "1.0"
        }
    }

    android.buildTypes {
        release {
            minifyEnabled = false
            proguardFiles += file('proguard-rules.pro')

            ndk.with {
                cppFlags += ["-DNOALOG"]
            }
        }
    }

    android.ndk {
        moduleName = "dexposed"

        toolchain = "gcc"
        toolchainVersion = "4.9"

        cppFlags += ["-DPLATFORM_SDK_VERSION=17", "-DHAVE_LITTLE_ENDIAN", "-D__ARM_ARCH_7__"]

        ldLibs += ["cutils","utils", "binder", "android_runtime", "dvm", "stlport", "dl"]
        stl = "stlport_static"

        ldFlags += "-Lsrc/main/jniLibs/x86"
        abiFilters += ["x86"]

        ldFlags += "-Lsrc/main/jniLibs/armeabi-v7a"
        abiFilters += ["armeabi-v7a"]

//        println("======"+getRootDir().toString()+"===="+getProjectDir().toString())
        cppFlags  += "-I${getProjectDir().toString()}/src/main/jni/include/dalvik".toString()
        cppFlags  += "-I${getProjectDir().toString()}/src/main/jni/include/dalvik/vm".toString()
        cppFlags  += "-I${getProjectDir().toString()}/src/main/jni/include/external/stlport/stlport".toString()
        cppFlags  += "-I${getProjectDir().toString()}/src/main/jni/include/bionic".toString()
        cppFlags  += "-I${getProjectDir().toString()}/src/main/jni/include/bionic/libstdc++/include".toString()
        cppFlags  += "-I${getProjectDir().toString()}/src/main/jni/include/system/core/include".toString()
        cppFlags  += "-I${getProjectDir().toString()}/src/main/jni/include/frameworks/native/include".toString()
        cppFlags  += "-I${getProjectDir().toString()}/src/main/jni/include/frameworks/base/include".toString()
        cppFlags  += "-I${getProjectDir().toString()}/src/main/jni/include/libnativehelper/include".toString()
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
}